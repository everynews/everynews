import { z } from 'zod'
import 'zod-openapi/extend'

export const LANGUAGE_CODES = [
  'af',
  'ak',
  'am',
  'ar',
  'as',
  'ay',
  'az',
  'ba',
  'be',
  'bg',
  'bho',
  'bm',
  'bn',
  'bo',
  'bs',
  'ca',
  'ceb',
  'ckb',
  'co',
  'cs',
  'cy',
  'da',
  'de',
  'doi',
  'dv',
  'ee',
  'el',
  'en',
  'eo',
  'es',
  'et',
  'eu',
  'fa',
  'fi',
  'fil',
  'fj',
  'fo',
  'fr',
  'fy',
  'ga',
  'gd',
  'gl',
  'gn',
  'gom',
  'gu',
  'ha',
  'haw',
  'he',
  'hi',
  'hmn',
  'hr',
  'hsb',
  'ht',
  'hu',
  'hy',
  'id',
  'ig',
  'ikt',
  'ilo',
  'is',
  'it',
  'iu',
  'ja',
  'jv',
  'ka',
  'kk',
  'km',
  'kmr',
  'kn',
  'ko',
  'kri',
  'ku',
  'ky',
  'la',
  'lb',
  'lg',
  'ln',
  'lo',
  'lt',
  'lus',
  'lv',
  'mai',
  'mg',
  'mi',
  'mk',
  'ml',
  'mn',
  'mni',
  'mr',
  'ms',
  'mt',
  'mww',
  'my',
  'ne',
  'nl',
  'nb',
  'nso',
  'ny',
  'om',
  'or',
  'otq',
  'pa',
  'pl',
  'prs',
  'ps',
  'pt',
  'qu',
  'ro',
  'ru',
  'rw',
  'sa',
  'sd',
  'si',
  'sk',
  'sl',
  'sm',
  'sn',
  'so',
  'sq',
  'sr',
  'st',
  'su',
  'sv',
  'sw',
  'ta',
  'te',
  'tg',
  'th',
  'ti',
  'tk',
  'tl',
  'to',
  'tr',
  'ts',
  'tt',
  'ty',
  'ug',
  'uk',
  'ur',
  'uz',
  'vi',
  'xh',
  'yi',
  'yo',
  'yua',
  'yue',
  'zh-CN',
  'zh-TW',
  'zu',
] as const

export type LanguageCode = (typeof LANGUAGE_CODES)[number]

export const LANGUAGE_LABELS: Record<LanguageCode, string> = {
  af: 'Afrikaans',
  ak: 'Twi (Akan)',
  am: 'Amharic',
  ar: 'Arabic',
  as: 'Assamese',
  ay: 'Aymara',
  az: 'Azerbaijani',
  ba: 'Bashkir',
  be: 'Belarusian',
  bg: 'Bulgarian',
  bho: 'Bhojpuri',
  bm: 'Bambara',
  bn: 'Bengali',
  bo: 'Tibetan',
  bs: 'Bosnian',
  ca: 'Catalan',
  ceb: 'Cebuano',
  ckb: 'Kurdish (Sorani)',
  co: 'Corsican',
  cs: 'Czech',
  cy: 'Welsh',
  da: 'Danish',
  de: 'German',
  doi: 'Dogri',
  dv: 'Dhivehi',
  ee: 'Ewe',
  el: 'Greek',
  en: 'English',
  eo: 'Esperanto',
  es: 'Spanish',
  et: 'Estonian',
  eu: 'Basque',
  fa: 'Persian',
  fi: 'Finnish',
  fil: 'Filipino (Tagalog)',
  fj: 'Fijian',
  fo: 'Faroese',
  fr: 'French',
  fy: 'Frisian',
  ga: 'Irish',
  gd: 'Scots Gaelic',
  gl: 'Galician',
  gn: 'Guarani',
  gom: 'Konkani',
  gu: 'Gujarati',
  ha: 'Hausa',
  haw: 'Hawaiian',
  he: 'Hebrew',
  hi: 'Hindi',
  hmn: 'Hmong',
  hr: 'Croatian',
  hsb: 'Upper Sorbian',
  ht: 'Haitian Creole',
  hu: 'Hungarian',
  hy: 'Armenian',
  id: 'Indonesian',
  ig: 'Igbo',
  ikt: 'Inuinnaqtun',
  ilo: 'Ilocano',
  is: 'Icelandic',
  it: 'Italian',
  iu: 'Inuktitut',
  ja: 'Japanese',
  jv: 'Javanese',
  ka: 'Georgian',
  kk: 'Kazakh',
  km: 'Khmer',
  kmr: 'Kurdish (Northern)',
  kn: 'Kannada',
  ko: 'Korean',
  kri: 'Krio',
  ku: 'Kurdish',
  ky: 'Kyrgyz',
  la: 'Latin',
  lb: 'Luxembourgish',
  lg: 'Luganda',
  ln: 'Lingala',
  lo: 'Lao',
  lt: 'Lithuanian',
  lus: 'Mizo',
  lv: 'Latvian',
  mai: 'Maithili',
  mg: 'Malagasy',
  mi: 'Maori',
  mk: 'Macedonian',
  ml: 'Malayalam',
  mn: 'Mongolian',
  mni: 'Meiteilon (Manipuri)',
  mr: 'Marathi',
  ms: 'Malay',
  mt: 'Maltese',
  mww: 'Hmong Daw',
  my: 'Myanmar (Burmese)',
  nb: 'Norwegian Bokm√•l',
  ne: 'Nepali',
  nl: 'Dutch',
  nso: 'Sepedi',
  ny: 'Nyanja (Chichewa)',
  om: 'Oromo',
  or: 'Odia (Oriya)',
  otq: 'Queretaro Otomi',
  pa: 'Punjabi',
  pl: 'Polish',
  prs: 'Dari',
  ps: 'Pashto',
  pt: 'Portuguese (Portugal, Brazil)',
  qu: 'Quechua',
  ro: 'Romanian',
  ru: 'Russian',
  rw: 'Kinyarwanda',
  sa: 'Sanskrit',
  sd: 'Sindhi',
  si: 'Sinhala (Sinhalese)',
  sk: 'Slovak',
  sl: 'Slovenian',
  sm: 'Samoan',
  sn: 'Shona',
  so: 'Somali',
  sq: 'Albanian',
  sr: 'Serbian',
  st: 'Sesotho',
  su: 'Sundanese',
  sv: 'Swedish',
  sw: 'Swahili',
  ta: 'Tamil',
  te: 'Telugu',
  tg: 'Tajik',
  th: 'Thai',
  ti: 'Tigrinya',
  tk: 'Turkmen',
  tl: 'Tagalog (Filipino)',
  to: 'Tongan',
  tr: 'Turkish',
  ts: 'Tsonga',
  tt: 'Tatar',
  ty: 'Tahitian',
  ug: 'Uyghur',
  uk: 'Ukrainian',
  ur: 'Urdu',
  uz: 'Uzbek',
  vi: 'Vietnamese',
  xh: 'Xhosa',
  yi: 'Yiddish',
  yo: 'Yoruba',
  yua: 'Yucatec Maya',
  yue: 'Cantonese (Traditional)',
  'zh-CN': 'Chinese (Simplified)',
  'zh-TW': 'Chinese (Traditional)',
  zu: 'Zulu',
}

export const LanguageCodeSchema = z.enum(LANGUAGE_CODES).openapi({
  description: 'ISO language code',
  example: 'en',
})

export const LanguageSelectSchema = z
  .object({
    code: LanguageCodeSchema,
    label: z.string(),
  })
  .openapi({
    description: 'Language selection with code and readable label',
    example: { code: 'en', label: 'English' },
  })

export function getLanguageLabel(code: LanguageCode): string {
  return LANGUAGE_LABELS[code]
}

export function getLanguageOptions(): Array<{
  code: LanguageCode
  label: string
}> {
  return LANGUAGE_CODES.map((code) => ({
    code,
    label: LANGUAGE_LABELS[code],
  }))
}
